name: "Check Code"

on:
  pull_request:
    branches: [ "main" ]
    
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Check for Python files
      id: check_files
      run: |
        if [[ -z $(git ls-files '*.py') ]]; then
          echo "No Python files to lint."
          echo "python_files=false" >> $GITHUB_ENV
          exit 0
        else
          echo "python_files=true" >> $GITHUB_ENV
        fi

    - name: Run linter
      run: |
        pylint --disable=E0401 $(git ls-files '*.py')
      continue-on-error: false  # Ensure failure if pylint returns non-zero exit code
      
  analyze:
    needs: lint
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: python
            build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"

    # Print the vulnerabilities found by CodeQL
    - name: Print vulnerabilities
      if: ${{ always() }}
      run: |
        # Check if the SARIF file exists
        if [ -f "${{ github.workspace }}/codeql-database/codeql-database.sarif" ]; then
          echo "Vulnerabilities found:"

          # Parse and print the results using jq
          cat ${{ github.workspace }}/codeql-database/codeql-database.sarif | jq '.runs[0].results[] | {ruleId, message, locations: .locations[0].physicalLocation}'
        else
          echo "No SARIF file found."
        fi